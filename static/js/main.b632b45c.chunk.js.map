{"version":3,"sources":["Components/ListItems/ListItems.js","App.js","reportWebVitals.js","index.js"],"names":["ListItems","props","listItems","items","map","item","className","type","id","key","value","text","onChange","event","setUpdate","target","classname","icon","onClick","deleteItem","duration","easing","library","add","faTrash","App","state","currentItem","handleInput","bind","addItem","this","setState","Date","now","preventDefault","newItem","console","log","newItems","filteredItems","filter","onSubmit","placeholder","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uSAyCeA,MApCf,SAAmBC,GACf,IACMC,EADQD,EAAME,MACIC,KAAI,SAAAC,GAExB,OAAO,qBAAKC,UAAU,OAAf,SACH,8BACI,uBACCC,KAAK,OACLC,GAAIH,EAAKI,IACTC,MAAOL,EAAKM,KACZC,SAAW,SAACC,GACRZ,EAAMa,UAAUD,EAAME,OAAOL,MAAML,EAAKI,QAEjD,+BACI,cAAC,IAAD,CACAO,UAAU,UACTC,KAAK,QACLC,QAAS,kBAAMjB,EAAMkB,WAAWd,EAAKI,cAbZJ,EAAKI,QAsB3C,OACI,8BACI,cAAC,IAAD,CAAUW,SAAU,IAAKC,OAAO,cAAhC,SACCnB,O,eC3BboB,IAAQC,IAAIC,K,IA2FGC,E,kDAxFb,WAAYxB,GAAO,IAAD,8BAChB,cAAMA,IACDyB,MAAO,CACVvB,MAAO,GACPwB,YAAa,CACXhB,KAAM,GACNF,IAAK,KAGT,EAAKmB,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKC,QAAU,EAAKA,QAAQD,KAAb,gBACf,EAAKV,WAAa,EAAKA,WAAWU,KAAhB,gBAClB,EAAKf,UAAY,EAAKA,UAAUe,KAAf,gBAZD,E,wDAeNhB,GACVkB,KAAKC,SAAS,CACZL,YAAY,CACVhB,KAAME,EAAME,OAAOL,MACnBD,IAAKwB,KAAKC,W,8BAMRrB,GACNA,EAAMsB,iBACN,IAAMC,EAAUL,KAAKL,MAAMC,YAE3B,GADAU,QAAQC,IAAIF,GACQ,KAAjBA,EAAQzB,KAAY,CACrB,IAAM4B,EAAQ,sBAAMR,KAAKL,MAAMvB,OAAjB,CAAuBiC,IACrCL,KAAKC,SAAS,CACZ7B,MAAOoC,EACPZ,YAAY,CACVhB,KAAM,GACNF,IAAK,S,iCASFA,GACT,IAAM+B,EAAgBT,KAAKL,MAAMvB,MAAMsC,QAAO,SAAApC,GAAI,OAChDA,EAAKI,MAAQA,KACfsB,KAAKC,SAAS,CACZ7B,MAAOqC,M,gCAID7B,EAAMF,GACd,IAAMN,EAAQ4B,KAAKL,MAAMvB,MACzBA,EAAMC,KAAI,SAAAC,GACJA,EAAKI,MAAQA,IACfJ,EAAKM,KAAOA,MAGhBoB,KAAKC,SAAS,CACZ7B,MAAOA,M,+BAIT,OAGE,sBAAKG,UAAU,MAAf,UACE,iCACE,uBAAME,GAAG,aAAakC,SAAUX,KAAKD,QAArC,UACE,uBACEvB,KAAK,OACLoC,YAAY,aACZjC,MAAQqB,KAAKL,MAAMC,YAAYhB,KAC/BC,SAAUmB,KAAKH,cAEjB,wBAAQrB,KAAK,SAAb,uBAGJ,cAAC,EAAD,CACAJ,MAAS4B,KAAKL,MAAMvB,MACpBgB,WAAYY,KAAKZ,WACjBL,UAAYiB,KAAKjB,mB,GAnFP8B,aCGHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b632b45c.chunk.js","sourcesContent":["import React from 'react';\r\nimport './ListItems.css';\r\nimport {FontAwesomeIcon} from '@fortawesome/react-fontawesome';\r\nimport FlipMove from 'react-flip-move';\r\n\r\nfunction ListItems(props){\r\n    const items = props.items;\r\n    const listItems = items.map(item =>{\r\n\r\n        return <div className=\"list\" key={item.key} >\r\n            <p>\r\n                <input\r\n                 type=\"text\" \r\n                 id={item.key} \r\n                 value={item.text}\r\n                 onChange ={(event) =>{\r\n                     props.setUpdate(event.target.value,item.key)\r\n                 }}/>\r\n            <span>\r\n                <FontAwesomeIcon \r\n                classname=\"faicons\"\r\n                 icon=\"trash\"\r\n                 onClick={() => props.deleteItem(item.key)} />\r\n            </span></p>\r\n            \r\n        </div>\r\n    }\r\n    )\r\n    \r\n    \r\n    \r\n    return(\r\n        <div>\r\n            <FlipMove duration={550} easing=\"ease-in-out\">\r\n            {listItems}\r\n            </FlipMove>\r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListItems;","\nimport './App.css';\nimport { Component } from 'react';\nimport ListItems from './Components/ListItems/ListItems';\nimport {library} from '@fortawesome/fontawesome-svg-core';\nimport {faTrash} from '@fortawesome/free-solid-svg-icons';\n\nlibrary.add(faTrash);\n\nclass App extends Component{\n  constructor(props){\n    super(props);\n    this.state ={\n      items: [],\n      currentItem: {\n        text: '',\n        key: ''\n      }\n    }\n    this.handleInput = this.handleInput.bind(this); // I need to .bind each time when I pass my custom function to an event handler like onChange or onSubmit\n    this.addItem = this.addItem.bind(this);\n    this.deleteItem = this.deleteItem.bind(this);\n    this.setUpdate = this.setUpdate.bind(this);\n  }\n\n  handleInput(event){\n    this.setState({\n      currentItem:{\n        text: event.target.value,\n        key: Date.now()\n      }\n    })\n  }\n\n\n  addItem(event) {\n    event.preventDefault() //Preventing refresh page when I click on the button\n    const newItem = this.state.currentItem;\n    console.log(newItem);\n    if(newItem.text !== \"\"){\n      const newItems =[...this.state.items,newItem];\n      this.setState({\n        items: newItems,\n        currentItem:{\n          text: \"\",\n          key: \"\"\n\n        }\n      })\n\n    }\n\n  }\n\n  deleteItem(key) {\n    const filteredItems = this.state.items.filter(item =>\n      item.key !== key);\n    this.setState({\n      items: filteredItems\n    })\n  }\n\n  setUpdate(text, key) {\n    const items = this.state.items;\n    items.map(item => {\n      if (item.key === key) {\n        item.text = text;\n      }\n    })\n    this.setState({\n      items: items\n    })\n  }\n  render(){\n    return(\n     \n\n      <div className=\"app\">\n        <header>\n          <form id=\"to-do-form\" onSubmit={this.addItem}>\n            <input \n              type=\"text\"\n              placeholder=\"Enter Text\" \n              value ={this.state.currentItem.text}\n              onChange={this.handleInput}\n             />\n            <button type=\"submit\">Add </button>\n          </form>\n        </header>\n        <ListItems \n        items = {this.state.items}\n        deleteItem={this.deleteItem}\n        setUpdate ={this.setUpdate}></ListItems>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}